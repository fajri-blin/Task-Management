@model IEnumerable<ClientSide.ViewModels.Assignment.GetForStaffVM>

@{
    ViewData["Title"] = "GetProgressForStaff";
}

<style>
    .card-title h5,
    .card-title h6 {
        margin-bottom: 5px;
    }

    .progress-item.text,
    .progress-item {
        color: black; /* Set the text color to black */
    }
    .no-line {
        border-top: none;
    }

    .badge-not-started {
        background-color: gray;
    }

    .badge-in-progress {
        background-color: yellow;
    }

    .badge-checking {
        background-color: orange;
    }

    .badge-revision {
        background-color: red;
    }

    .badge-done {
        background-color: green;
    }
</style>


<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <h4 class="fw-bold py-3 mb-4">
            <span class="text-muted fw-light">Progress /</span>
            Progress View
        </h4>
        <div class="row mb-3">
            @foreach (var item in Model)
            {
                <div class="col-md-6 col-lg-4 mb-3">
                    <a href="@Url.Action("Index", "Progress", new { guid = item.AssignmentGuid })" class="card-link">
                        <div class="card">
                            <div class="card-body">
                                <div class="card-title d-flex flex-column">
                                    <h5>@Html.DisplayFor(modelItem => item.AssignmentName)</h5>
                                    <h6>@Html.DisplayFor(modelItem => item.ManagerName)</h6>
                                </div>
                                <div class="progress-items">
                                    @for (var i = 0; i < item.ListProgress.Count; i++)
                                    {
                                        <div class="progress-item @((i == item.ListProgress.Count - 1) ? "no-line" : "") text">
                                            @item.ListProgress[i].Description
                                        </div>
                                        <div class="progress-item @((i == item.ListProgress.Count - 1) ? "no-line" : "")">
                                            @if (item.ListProgress[i].StatusProgress == Task_Management.Utilities.Enum.StatusEnum.NotStarted)
                                            {
                                                <span class="badge badge-not-started">@item.ListProgress[i].StatusProgress</span>
                                            }
                                            @if (item.ListProgress[i].StatusProgress == Task_Management.Utilities.Enum.StatusEnum.InProgress)
                                            {
                                                <span class="badge badge-in-progress">@item.ListProgress[i].StatusProgress</span>
                                            }
                                            @if (item.ListProgress[i].StatusProgress == Task_Management.Utilities.Enum.StatusEnum.Checking)
                                            {
                                                <span class="badge badge-checking">@item.ListProgress[i].StatusProgress</span>
                                            }
                                            @if (item.ListProgress[i].StatusProgress == Task_Management.Utilities.Enum.StatusEnum.Revision)
                                            {
                                                <span class="badge badge-revision">@item.ListProgress[i].StatusProgress</span>
                                            }
                                            @if (item.ListProgress[i].StatusProgress == Task_Management.Utilities.Enum.StatusEnum.Done)
                                            {
                                                <span class="badge badge-done">@item.ListProgress[i].StatusProgress</span>
                                            }
                                        </div>

                                        @if (i < item.ListProgress.Count - 1)
                                        {
                                            <hr />
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
</div>
