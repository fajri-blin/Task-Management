@model IEnumerable<ClientSide.ViewModels.Assignment.AssignmentVM>

@{
    ViewData["Title"] = "GetAllAssignment";
    var deleteUrl = Url.Action("DeepDeleteAssignments", "Assignment");
}


<!-- Test Design-->
<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <!--Navigations-->
        <h4 class="fw-bold py-3 mb-4">
            <span class="text-muted fw-light">Assignment /</span>
            List Assignment
        </h4>
        <div class="row mb-5">
        @foreach (var item in Model)
        {
            <!-- Card Each of Assigment -->
            <div class="col-md-6 col-lg-4 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <div class="card-title d-flex align-items-start justify-content-between">
                                <div class="avatar flex-shrink-0">
                                    <i class='bx bxs-label'></i>
                                </div>
                                <div class="dropdown">
                                    <button class="btn p-0" type="button" id="cardOpt4" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="bx bx-dots-vertical-rounded">
                                        </i>
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="cardOpt4" style="">
                                        <a class="dropdown-item" asp-controller="Assignment" asp-action="EditAssignment" asp-route-guid="@item.Guid">Edit</a>
                                        <button class="dropdown-item" asp-action="Details">Details</button>
                                        <button class="dropdown-item text-danger" onclick="showDeleteConfirmation('@item.Guid')">Delete</button>
                                    </div>
                                </div>
                            </div>
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                            <h6 class="card-subtitle mb-2 text-muted"> @Html.DisplayFor(modelItem => item.Description) </h6>
                            <p class="card-text">
                                <strong>Due Date: <span id="dueDate">@item.DueDate</span></strong><br />
                                <strong>Category: @Html.DisplayFor(modelItem => item.Category)</strong><br />
                            </p>
                            <p class="mb-0 pb-0">Progress : </p>
                            <div class="progress mb-5 mt-0 pt-0">
                                <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" role="progressbar" style="width: @Html.DisplayFor(modelItem => item.Category)%" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                    </div>
            </div>
        }
        </div>
    </div>
</div>


@section Styles{
    <link rel="stylesheet" href="../css/deep.css" />
}

@section Scripts {
    <!-- Moment.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <script>
        // Format the DueDate using Moment.js and replace the content of the #dueDate element
        // with the formatted date.
        document.addEventListener('DOMContentLoaded', function () {
            const dueDateElement = document.getElementById('dueDate');
            const dueDateValue = dueDateElement.textContent;
            const formattedDueDate = moment(dueDateValue).format('D MMMM YYYY - h:mm A');
            dueDateElement.textContent = formattedDueDate;
        });
    </script>
}
