@model ClientSide.ViewModels.Dashboard.DashboardRoleAdminVM

@{
    ViewData["Title"] = "Dashboard - Metrodata Task Management";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row">
        <!-- Category Statistics -->
        <div class="col-md-6 col-lg-6 order-0 mb-4">
            <div class="card h-100">
                <div class="card-header d-flex align-items-center justify-content-between pb-0">
                    <div class="card-title mb-0">
                        <h5 class="m-0 me-2">Accounts</h5>
                    </div>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div class="d-flex flex-column align-items-center gap-1">
                            <h2 class="mb-2">@Model.Count.Sum()</h2>
                            <span>Total Account</span>
                        </div>
                        <div id="roleStatisticChart"></div>
                    </div>
                    <ul class="p-0 m-0">
                        <li class="d-flex mb-4 pb-1">
                            <div class="avatar flex-shrink-0 me-3">
                                <span class="avatar-initial rounded bg-label-primary">
                                    <i class='bx bx-category'></i>
                                </span>
                            </div>
                            <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                                <div class="me-2">
                                    <h6 class="mb-0">@Model.Role[0]</h6>
                                </div>
                                <div class="user-progress">
                                    <small class="fw-semibold">@Model.Count[0]</small>
                                </div>
                            </div>
                        </li>

                        <li class="d-flex mb-4 pb-1">
                            <div class="avatar flex-shrink-0 me-3">
                                <span class="avatar-initial rounded bg-label-success">
                                    <i class='bx bx-category'></i>
                                </span>
                            </div>
                            <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                                <div class="me-2">
                                    <h6 class="mb-0">@Model.Role[1]</h6>
                                </div>
                                <div class="user-progress">
                                    <small class="fw-semibold">@Model.Count[1]</small>
                                </div>
                            </div>
                        </li>

                        <li class="d-flex mb-4 pb-1">
                            <div class="avatar flex-shrink-0 me-3">
                                <span class="avatar-initial rounded bg-label-info">
                                    <i class='bx bx-category'></i>
                                </span>
                            </div>
                            <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                                <div class="me-2">
                                    <h6 class="mb-0">@Model.Role[2]</h6>
                                </div>
                                <div class="user-progress">
                                    <small class="fw-semibold">@Model.Count[2]</small>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        // Mendapatkan tanggal saat ini
        var currentDate = new Date();

        // Mendapatkan bulan saat ini (berdasarkan indeks 0-11)
        var currentMonth = currentDate.getMonth();
        /**
        * Dashboard Analytics
        */

        'use strict';

        (function () {
            let cardColor, headingColor, axisColor, shadeColor, borderColor;

            cardColor = config.colors.white;
            headingColor = config.colors.headingColor;
            axisColor = config.colors.axisColor;
            borderColor = config.colors.borderColor;


            // Order Statistics Chart
            // --------------------------------------------------------------------
            const chartOrderStatistics = document.querySelector('#roleStatisticChart'),
                orderChartConfig = {
                    chart: {
                        height: 165,
                        width: 130,
                        type: 'pie'
                    },
                    labels: @Html.Raw(Json.Serialize(Model.Role)),
                    series: @Html.Raw(Json.Serialize(Model.Count)),
                    colors: [config.colors.primary, config.colors.secondary, config.colors.info, config.colors.success],
                    stroke: {
                        width: 1,
                        colors: cardColor
                    },
                    dataLabels: {
                        enabled: true,
                        formatter: function (val, opt) {
                            return parseInt(val) + '%';
                        },
                    },
                    legend: {
                        show: false
                    },
                    grid: {
                        padding: {
                            top: 0,
                            bottom: 0,
                            right: 12
                        }
                    },

                };
            if (typeof chartOrderStatistics !== undefined && chartOrderStatistics !== null) {
                const statisticsChart = new ApexCharts(chartOrderStatistics, orderChartConfig);
                statisticsChart.render();
            }
        })();

    </script>
}